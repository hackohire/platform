service: lilium

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  usagePlans:
    throttle:
      burstLimit: 50
      rateLimit: 80

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  serverless-offline:
    port: 3300

resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: "ApiGatewayRestApi"
        StatusCode: "401"
    AuthFailureGatewayResponse:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: "ApiGatewayRestApi"
        StatusCode: "401"

functions:

  graphql:
    handler: src/function-handlers/graphql.handle
    # role: ServiceRole
    events:
      - http:
          path: graphql
          method: post
          cors: true
          integration: lambda-proxy
      - http:
          path: graphql
          method: get
          cors: true
          integration: lambda-proxy


  # GraphQLPost:
  #   handler: src/function-handlers/graphql.handle
  #   events:
  #   - http:
  #       path: /graphql
  #       method: post
  #       cors: true
  # GraphQLPlayground:
  #   handler: src/function-handlers/graphql.handle
  #   events:
  #   - http:
  #       path: /graphql
  #       method: get
  #       cors: true
